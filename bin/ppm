#!/bin/bash

set -e

initialCwd=`pwd -P`
scriptDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

apmPath=$0
# Get the name of the script that was just called.
apmName=$(basename "$0")
builtin cd "`dirname "$apmPath"`"
binDir=`basename "$apmPath"`

# Infer the channel name from the name of this script.
case apmName in
  ppm-next)
    CHANNEL=next
    ;;
  *)
    CHANNEL=stable
    ;;
esac

# Infer the base name (for ATOM_HOME and other purposes) from the channel name.
ATOM_BASE_NAME="pulsar"
if [ "$CHANNEL" == 'next' ]; then
  ATOM_BASE_NAME="pulsar-next"
fi
export ATOM_BASE_NAME

# Detect the Node binary name.
osName=`uname -s`
if [ "${osName:0:10}" == 'MINGW32_NT' ]; then
  nodeBin="node.exe"
elif [[ $(uname -r) == *-Microsoft ]]; then
  nodeBin="node.exe"
else
  nodeBin="node"
fi

while [ -L "$binDir" ]
do
  binDir=`readlink "$binDir"`
  builtin cd "`dirname "$binDir"`"
  binDir=`basename "$binDir"`
done

binDir=`pwd -P`

# Force NPM to use its builtin node-gyp.
unset npm_config_node_gyp

cliPath="$binDir/../src/cli.js"
if [[ $(uname -r) == *-Microsoft ]]; then
  cliPath="$(echo $cliPath | sed 's/\/mnt\/\([a-z]*\)\(.*\)/\1:\2/')"
  cliPath="${cliPath////\\}"
else
  builtin cd "$initialCwd"
fi

"$binDir/$nodeBin" "$cliPath" "$@"
